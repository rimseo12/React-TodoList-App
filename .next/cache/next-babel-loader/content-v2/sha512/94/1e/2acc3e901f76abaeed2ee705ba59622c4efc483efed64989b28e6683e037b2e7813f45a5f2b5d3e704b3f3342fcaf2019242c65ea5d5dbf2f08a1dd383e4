{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"C:\\\\WebProject\\\\todolist\\\\components\\\\TodoList.js\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    flex: 1; /*\\uC790\\uC2E0\\uC774 \\uCC28\\uC9C0 \\uD560 \\uC218 \\uC788\\uB294 \\uC601\\uC5ED\\uC744 \\uAF49 \\uCC44\\uC6B0\\uB294 \\uC124\\uC815*/\\n    padding: 20px 32px;\\n    padding-bottom: 48px;\\n    overflow-y: auto;\\n    background: gray; /* \\uC0AC\\uC774\\uC988 \\uC870\\uC815\\uC774 \\uC798 \\uB418\\uACE0 \\uC788\\uB294\\uC9C0 \\uD655\\uC778\\uD558\\uAE30 \\uC704\\uD55C \\uC784\\uC2DC \\uC2A4\\uD0C0\\uC77C */\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport TodoItem from './TodoItem';\nimport { useTodoState } from '../TodoContext';\nvar TodoListBlock = styled.div(_templateObject());\n_c = TodoListBlock;\n\nfunction TodoList() {\n  _s();\n\n  var _this = this;\n\n  var todos = useTodoState();\n  return /*#__PURE__*/_jsxDEV(TodoListBlock, _objectSpread({}, todos.map(function (todo) {\n    return /*#__PURE__*/_jsxDEV(TodoItem, {\n      id: todo.id,\n      text: todo.text,\n      done: todo.done\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, _this);\n  })), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TodoList, \"pr6K0VeC20DQDtCj4dVyY1Qagh0=\", false, function () {\n  return [useTodoState];\n});\n\n_c2 = TodoList;\nexport default TodoList;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TodoListBlock\");\n$RefreshReg$(_c2, \"TodoList\");","map":{"version":3,"sources":["C:/WebProject/todolist/components/TodoList.js"],"names":["React","styled","TodoItem","useTodoState","TodoListBlock","div","TodoList","todos","map","todo","id","text","done"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAAQC,YAAR,QAA2B,gBAA3B;AAEA,IAAMC,aAAa,GAAGH,MAAM,CAACI,GAAV,mBAAnB;KAAMD,a;;AAQN,SAASE,QAAT,GAAmB;AAAA;;AAAA;;AACjB,MAAMC,KAAK,GAAGJ,YAAY,EAA1B;AACA,sBACE,QAAC,aAAD,oBACMI,KAAK,CAACC,GAAN,CAAU,UAAAC,IAAI;AAAA,wBAChB,QAAC,QAAD;AAEE,MAAA,EAAE,EAAEA,IAAI,CAACC,EAFX;AAGE,MAAA,IAAI,EAAED,IAAI,CAACE,IAHb;AAIE,MAAA,IAAI,EAAEF,IAAI,CAACG;AAJb,OACOH,IAAI,CAACC,EADZ;AAAA;AAAA;AAAA;AAAA,aADgB;AAAA,GAAd,CADN;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GAfQJ,Q;UACOH,Y;;;MADPG,Q;AAiBT,eAAeA,QAAf","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport TodoItem from './TodoItem';\r\nimport {useTodoState} from '../TodoContext';\r\n\r\nconst TodoListBlock = styled.div`\r\n    flex: 1; /*자신이 차지 할 수 있는 영역을 꽉 채우는 설정*/\r\n    padding: 20px 32px;\r\n    padding-bottom: 48px;\r\n    overflow-y: auto;\r\n    background: gray; /* 사이즈 조정이 잘 되고 있는지 확인하기 위한 임시 스타일 */\r\n`;\r\n\r\nfunction TodoList(){\r\n  const todos = useTodoState();\r\n  return(\r\n    <TodoListBlock\r\n      {...todos.map(todo => (\r\n        <TodoItem\r\n          key={todo.id}\r\n          id={todo.id}\r\n          text={todo.text}\r\n          done={todo.done}\r\n        />\r\n      ))}\r\n    >\r\n    </TodoListBlock>\r\n  );\r\n}\r\n\r\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}