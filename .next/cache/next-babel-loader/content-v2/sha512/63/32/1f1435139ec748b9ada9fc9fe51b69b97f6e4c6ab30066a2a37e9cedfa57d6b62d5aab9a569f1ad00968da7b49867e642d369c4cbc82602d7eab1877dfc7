{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\WebProject\\\\todolist\\\\components\\\\TodoCreate.js\";\nimport React, { useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport { MdAdd } from 'react-icons/md';\nimport { useTodoDispatch, useTodoNextId } from '../TodoContext';\nconst CircleButton = styled.button`\n  background: #38d9a9;\n  &:hover {\n    background: #63e6be;\n  }\n  &:active {\n    background: #20c997;\n  }\n\n  z-index: 5;\n  cursor: pointer;\n  width: 80px;\n  height: 80px;\n  display: block;\n  align-items: center;\n  justify-content: center;\n  font-size: 60px;\n  position: absolute;\n  left: 50%;\n  bottom: 0px;\n  transform: translate(-50%, 50%);\n  color: white;\n  border-radius: 50%;\n  border: none;\n  outline: none;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  transition: 0.125s all ease-in;\n  ${props => props.open && css`\n      background: #ff6b6b;\n      &:hover {\n        background: #ff8787;\n      }\n      &:active {\n        background: #fa5252;\n      }\n      transform: translate(-50%, 50%) rotate(45deg);\n    `}\n`;\nconst InsertFormPositioner = styled.div`\n  width: 100%;\n  bottom: 0;\n  left: 0;\n  position: absolute;\n`;\nconst InsertForm = styled.form`\n  background: #f8f9fa;\n  padding-left: 32px;\n  padding-top: 32px;\n  padding-right: 32px;\n  padding-bottom: 72px;\n\n  border-bottom-left-radius: 16px;\n  border-bottom-right-radius: 16px;\n  border-top: 1px solid #e9ecef;\n`;\nconst Input = styled.input`\n  padding: 12px;\n  border-radius: 4px;\n  border: 1px solid #dee2e6;\n  width: 100%;\n  outline: none;\n  font-size: 18px;\n  box-sizing: border-box;\n`;\n\nfunction TodoCreate() {\n  const {\n    0: open,\n    1: setOpen\n  } = useState(false);\n  const {\n    0: value,\n    1: setValue\n  } = useState('');\n  const dispatch = useTodoDispatch();\n  const nextId = useTodoNextId();\n\n  const onToggle = () => setOpen(!open);\n\n  const onChange = e => setValue(e.target.value);\n\n  const onSubmit = e => {\n    e.preventDefault(); //새로고침 방지\n\n    dispatch({\n      type: 'CREATE',\n      todo: {\n        id: nextId.current,\n        text: value,\n        done: false\n      }\n    });\n    setValue('');\n    setOpen(false);\n    nextId.current += 1;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [open && /*#__PURE__*/_jsxDEV(InsertFormPositioner, {\n      children: /*#__PURE__*/_jsxDEV(InsertForm, {\n        onSubmit: onSubmit,\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          autoFocus: true,\n          placeholder: \"\\uD560 \\uC77C\\uC744 \\uC785\\uB825 \\uD6C4, Enter \\uB97C \\uB204\\uB974\\uC138\\uC694\",\n          onChange: onChange,\n          value: value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(CircleButton, {\n      onClick: onToggle,\n      open: open,\n      children: /*#__PURE__*/_jsxDEV(MdAdd, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\nexport default TodoCreate;","map":{"version":3,"sources":["C:/WebProject/todolist/components/TodoCreate.js"],"names":["React","useState","styled","css","MdAdd","useTodoDispatch","useTodoNextId","CircleButton","button","props","open","InsertFormPositioner","div","InsertForm","form","Input","input","TodoCreate","setOpen","value","setValue","dispatch","nextId","onToggle","onChange","e","target","onSubmit","preventDefault","type","todo","id","current","text","done"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,eAAT,EAA0BC,aAA1B,QAA+C,gBAA/C;AAEA,MAAMC,YAAY,GAAGL,MAAM,CAACM,MAAO;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,KAAK,IACLA,KAAK,CAACC,IAAN,IACAP,GAAI;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAM;AACN,CA1CA;AA4CA,MAAMQ,oBAAoB,GAAGT,MAAM,CAACU,GAAI;AACxC;AACA;AACA;AACA;AACA,CALA;AAOA,MAAMC,UAAU,GAAGX,MAAM,CAACY,IAAK;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAVA;AAYA,MAAMC,KAAK,GAAGb,MAAM,CAACc,KAAM;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;;AAUA,SAASC,UAAT,GAAsB;AAClB,QAAM;AAAA,OAACP,IAAD;AAAA,OAAOQ;AAAP,MAAkBjB,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM;AAAA,OAACkB,KAAD;AAAA,OAAQC;AAAR,MAAoBnB,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAMoB,QAAQ,GAAGhB,eAAe,EAAhC;AACA,QAAMiB,MAAM,GAAGhB,aAAa,EAA5B;;AAEA,QAAMiB,QAAQ,GAAG,MAAML,OAAO,CAAC,CAACR,IAAF,CAA9B;;AACA,QAAMc,QAAQ,GAAGC,CAAC,IAAIL,QAAQ,CAACK,CAAC,CAACC,MAAF,CAASP,KAAV,CAA9B;;AACA,QAAMQ,QAAQ,GAAGF,CAAC,IAAI;AAClBA,IAAAA,CAAC,CAACG,cAAF,GADkB,CACE;;AACpBP,IAAAA,QAAQ,CAAC;AACNQ,MAAAA,IAAI,EAAE,QADA;AAENC,MAAAA,IAAI,EAAE;AACFC,QAAAA,EAAE,EAAET,MAAM,CAACU,OADT;AAEFC,QAAAA,IAAI,EAAEd,KAFJ;AAGFe,QAAAA,IAAI,EAAE;AAHJ;AAFA,KAAD,CAAR;AAQAd,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAF,IAAAA,OAAO,CAAC,KAAD,CAAP;AACAI,IAAAA,MAAM,CAACU,OAAP,IAAkB,CAAlB;AACH,GAbD;;AAiBA,sBACE;AAAA,eACGtB,IAAI,iBACH,QAAC,oBAAD;AAAA,6BACE,QAAC,UAAD;AAAY,QAAA,QAAQ,EAAEiB,QAAtB;AAAA,+BACE,QAAC,KAAD;AACG,UAAA,SAAS,MADZ;AAEG,UAAA,WAAW,EAAC,gFAFf;AAGG,UAAA,QAAQ,EAAEH,QAHb;AAIG,UAAA,KAAK,EAAEL;AAJV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFJ,eAaE,QAAC,YAAD;AAAc,MAAA,OAAO,EAAEI,QAAvB;AAAiC,MAAA,IAAI,EAAEb,IAAvC;AAAA,6BACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA,kBADF;AAmBD;;AAED,eAAeO,UAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { MdAdd } from 'react-icons/md';\r\nimport { useTodoDispatch, useTodoNextId } from '../TodoContext';\r\n\r\nconst CircleButton = styled.button`\r\n  background: #38d9a9;\r\n  &:hover {\r\n    background: #63e6be;\r\n  }\r\n  &:active {\r\n    background: #20c997;\r\n  }\r\n\r\n  z-index: 5;\r\n  cursor: pointer;\r\n  width: 80px;\r\n  height: 80px;\r\n  display: block;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 60px;\r\n  position: absolute;\r\n  left: 50%;\r\n  bottom: 0px;\r\n  transform: translate(-50%, 50%);\r\n  color: white;\r\n  border-radius: 50%;\r\n  border: none;\r\n  outline: none;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  transition: 0.125s all ease-in;\r\n  ${props =>\r\n    props.open &&\r\n    css`\r\n      background: #ff6b6b;\r\n      &:hover {\r\n        background: #ff8787;\r\n      }\r\n      &:active {\r\n        background: #fa5252;\r\n      }\r\n      transform: translate(-50%, 50%) rotate(45deg);\r\n    `}\r\n`;\r\n\r\nconst InsertFormPositioner = styled.div`\r\n  width: 100%;\r\n  bottom: 0;\r\n  left: 0;\r\n  position: absolute;\r\n`;\r\n\r\nconst InsertForm = styled.form`\r\n  background: #f8f9fa;\r\n  padding-left: 32px;\r\n  padding-top: 32px;\r\n  padding-right: 32px;\r\n  padding-bottom: 72px;\r\n\r\n  border-bottom-left-radius: 16px;\r\n  border-bottom-right-radius: 16px;\r\n  border-top: 1px solid #e9ecef;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  padding: 12px;\r\n  border-radius: 4px;\r\n  border: 1px solid #dee2e6;\r\n  width: 100%;\r\n  outline: none;\r\n  font-size: 18px;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nfunction TodoCreate() {\r\n    const [open, setOpen] = useState(false);\r\n    const [value, setValue] = useState('');\r\n    \r\n    const dispatch = useTodoDispatch();\r\n    const nextId = useTodoNextId();\r\n\r\n    const onToggle = () => setOpen(!open);\r\n    const onChange = e => setValue(e.target.value);\r\n    const onSubmit = e => {\r\n        e.preventDefault(); //새로고침 방지\r\n        dispatch({\r\n           type: 'CREATE',\r\n           todo: {\r\n               id: nextId.current,\r\n               text: value,\r\n               done: false\r\n           }\r\n        });\r\n        setValue('');\r\n        setOpen(false);\r\n        nextId.current += 1;\r\n    };\r\n  \r\n  \r\n  \r\n    return (\r\n      <>\r\n        {open && (\r\n          <InsertFormPositioner>\r\n            <InsertForm onSubmit={onSubmit}>\r\n              <Input \r\n                 autoFocus \r\n                 placeholder=\"할 일을 입력 후, Enter 를 누르세요\" \r\n                 onChange={onChange}\r\n                 value={value}\r\n                 />\r\n            </InsertForm>\r\n          </InsertFormPositioner>\r\n        )}\r\n        <CircleButton onClick={onToggle} open={open}>\r\n          <MdAdd />\r\n        </CircleButton>\r\n      </>\r\n    );\r\n  }\r\n  \r\n  export default TodoCreate;"]},"metadata":{},"sourceType":"module"}